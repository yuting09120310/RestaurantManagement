@model RestaurantManagement.BackEnd.ViewModel.Member.MemberEditViewModel

@{
	ViewData["Title"] = "編輯廣告";
}

<!-- Hero -->
<div class="bg-body-light">
	<div class="content content-full">
		<div class="d-flex flex-column flex-sm-row justify-content-sm-between align-items-sm-center py-2">
			<div class="flex-grow-1">
				<h1 class="h3 fw-bold mb-1">
					廣告管理
				</h1>
			</div>
			<nav class="flex-shrink-0 mt-3 mt-sm-0 ms-sm-3" aria-label="breadcrumb">
				<ol class="breadcrumb breadcrumb-alt">
					<li class="breadcrumb-item">
						<span class="link-fx">廣告設定</span>
					</li>
					<li class="breadcrumb-item" aria-current="page">
						廣告編輯
					</li>
				</ol>
			</nav>
		</div>
	</div>
</div>
<!-- END Hero -->
<!-- Page Content -->
<div class="content">
	<!-- Dynamic Table Full -->
	<div class="block block-rounded">
		<div class="block-header block-header-default">
			<h3 class="block-title">廣告編輯</h3>
		</div>
		<div class="block-content block-content-full">
			<form class="row g-3 needs-validation" novalidate="" asp-action="Edit" asp-controller="Member" enctype="multipart/form-data">

				<input type="hidden" asp-for="MemberId"/>


				<div class="col-md-12">
					<label for="validationCustom01" class="form-label">@Html.DisplayNameFor(model => model.MemberAccount)</label>
					<input asp-for="MemberAccount" class="form-control" type="text" />
					<span asp-validation-for="MemberAccount" class="text-danger"></span>
				</div>

				<div class="col-md-12">
					<label for="validationCustom01" class="form-label">@Html.DisplayNameFor(model => model.MemberPassword)</label>
					<input asp-for="MemberPassword" class="form-control" type="password" />
					<span asp-validation-for="MemberPassword" class="text-danger"></span>
				</div>


				<div class="col-md-12">
					<label for="validationCustom02" class="form-label">@Html.DisplayNameFor(model => model.MemberName)</label>
					<input asp-for="MemberName" class="form-control" type="text" />
					<span asp-validation-for="MemberName" class="text-danger"></span>
				</div>


				<div class="col-md-12">
					<label for="validationCustom02" class="form-label">@Html.DisplayNameFor(model => model.MemberPhone)</label>
					<input asp-for="MemberPhone" class="form-control" type="text" />
					<span asp-validation-for="MemberPhone" class="text-danger"></span>
				</div>


				<div class="col-md-12">
					<label for="validationCustom02" class="form-label">@Html.DisplayNameFor(model => model.MemberEmail)</label>
					<input asp-for="MemberEmail" class="form-control" type="text" />
					<span asp-validation-for="MemberEmail" class="text-danger"></span>
				</div>



				<div class="col-md-12">
					<label for="validationCustom02" class="form-label">@Html.DisplayNameFor(model => model.MemberPublish)</label>
					<select class="form-select" id="IsEnabled" required="" asp-for="MemberPublish">
						<option value="0">不啟用</option>
						<option value="1">啟用</option>
					</select>
					<span asp-validation-for="MemberPublish" class="text-danger"></span>
				</div>


				<div class="col-mt-12">
					<button class="btn btn-primary" onclick="checkPassword();" type="submit">送出</button>
					<a asp-action="Index" class="btn btn-primary">返回列表</a>
				</div>

			</form>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		var imgPreview = document.querySelector('#imgPreview');

		var file = document.querySelector('#imgPreview');


		function showPreview(event) {
			if (event.target.files.length > 0) {
				var src = URL.createObjectURL(event.target.files[0]);
				imgPreview.src = src;
				imgPreview.style.display = "block";
			}
		}


		function remove(event) {
			imgPreview.src = "/BackEnd/uploadimg.png";

			var fileInput = document.getElementById("MemberImg");
			fileInput.value = null; // Clear the selected file
		}
	</script>
}

