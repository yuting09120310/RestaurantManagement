@model IEnumerable<RestaurantManagement.BackEnd.ViewModel.Product.ProductIndexViewModel>;
@{
    ViewData["Title"] = "產品設定列表";
}
<!-- Hero -->
<div class="bg-body-light">
    <div class="content content-full">
        <div class="d-flex flex-column flex-sm-row justify-content-sm-between align-items-sm-center py-2">
            <div class="flex-grow-1">
                <h1 class="h3 fw-bold mb-1">
                    產品管理
                </h1>
            </div>
            <nav class="flex-shrink-0 mt-3 mt-sm-0 ms-sm-3" aria-label="breadcrumb">
                <ol class="breadcrumb breadcrumb-alt">
                    <li class="breadcrumb-item">
                        <span class="link-fx">產品管理</span>
                    </li>
                    <li class="breadcrumb-item" aria-current="page">
                        產品設定
                    </li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<!-- END Hero -->

<!-- Page Content -->
<div class="content">
    <!-- Dynamic Table Full -->
    <div class="block block-rounded">
        <div class="block-header block-header-default">

            <h3 class="block-title">產品設定列表</h3>

            <div class="nav navbar-right panel_toolbox">
                <a type="button" asp-action="Create" asp-controller="Product" class="btn btn-minw btn-primary"><i class="fa fa-plus"></i>新增</a>
            </div>

        </div>
        <div class="block-content block-content-full">
            <table class="table table-bordered table-striped table-vcenter js-dataTable-full">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.ProductClassName)</th>
                        <th>@Html.DisplayNameFor(model => model.ProductName)</th>
                        <th>@Html.DisplayNameFor(model => model.ProductImg1)</th>
                        <th>@Html.DisplayNameFor(model => model.Price)</th>
                        <th>處理</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="fs-sm">
                                @Html.DisplayFor(modelItem => item.ProductClassName)
                            </td>

                            <td class="fs-sm">
                                @Html.DisplayFor(modelItem => item.ProductName)
                            </td>

                            <td class="fs-sm" style="text-align: center;">
                                <img style="max-width:200px; max-height:200px;" src="@Url.Content("~/uploads/Product/" + item.ProductImg1)" />
                            </td>

                            <td class="fs-sm">
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>


                            <td>
                                @Html.ActionLink("編輯", "Edit", new { id=item.ProductId}) |
                                <a href="#" onclick="Delete(@item.ProductId)">刪除</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <!-- END Dynamic Table Full -->
</div>

<script>
	const Delete = (id) => {
		$.ajax({
			url: '/BackEnd/Product/Delete',
			type: 'GET',
			dataType: 'json',
			data: {id: id},
			success: function (response) {
				alert(response);
				location.reload();
			},
			error: function (xhr, status, error) {
				console.log(xhr.responseText);
			}
		});
	};
</script>